app.controller('DashCtrl', ['$scope','$auth','$location','$http','Upload','angularGridInstance', function($scope, $auth, $location,$http,Upload,angularGridInstance){

$auth.validateUser().
then(function(resp) {
  $scope.user = resp;
}).
catch(function(resp) {
  console.log(resp);
});

$scope.mychallenges = [];
  var getAllChallenges = function () {
    $http({
      method: "GET",
      url: "/api/challenges/"+$scope.user.id+".json"
    }).then(function (response){
      console.log(response.data);
      $scope.mychallenges = response.data;
      getCompletedChallenges();
      // $scope.refresh;
    },function (response){
      console.log(response);
    });
  };
getAllChallenges();

  $scope.finishedImage = {};
  $scope.recipeDone = function(id, creator, other){
    console.log(id, creator, other);
    var temp = "";
    if (other == "pending"){
      temp = "pending";
    } else {
      temp = "complete";
    };
    if(creator=="me"){
      var data = {
        // notes: $scope.finishedRecipe.notes,
        creator_image:$scope.finishedImage.file,
        creator_status: "complete",
        post_status: temp
      };
    } else {
      var data = {
        // notes: $scope.finishedRecipe.notes,
        participant_image:$scope.finishedImage.file,
        participant_status: "complete",
        post_status: temp
      };
    };
    Upload.upload({
      url: '/api/challenges/'+id+'.json',
      method:'PUT',
      fields: data
    }).success(function(response) {
        console.log(response);
        getAllChallenges();
    });
  };

  $scope.refresh = function(){
    angularGridInstance.gallery.refresh();
  }

$scope.likeRecipe = function(id, winner, index){
  console.log(id, winner, index);
  var data = {
    user_id: $scope.user.id,
    challenge_id: id,
    winner: winner
  }
  $http({
      method: "POST",
      url: "/api/likes.json",
      data: data
    }).then(function (response){
      console.log(response.data);
      if (winner=="creator"){
        $scope.myCompletedChallenges[index].creator_likes = $scope.myCompletedChallenges[index].creator_likes+1;
        $scope.myCompletedChallenges[index].voted_before = true;
      } else {
        $scope.myCompletedChallenges[index].participant_likes = $scope.myCompletedChallenges[index].participant_likes+1;
        $scope.myCompletedChallenges[index].voted_before = true;
      }
    },function (response){
      console.log(response);
    });
};
  var getCompletedChallenges = function () {
    $scope.myCompletedChallenges = [];
    for (var i=0; i<$scope.mychallenges.length;i++) {
      if ($scope.mychallenges[i].post_status == "complete") {
        $scope.myCompletedChallenges.push($scope.mychallenges[i]);
      };
    };
    console.log($scope.myCompletedChallenges);
  };
// $scope.participatingRecipes = {};
//   var getAllParticipatingRecipes = function () {
//     $http({
//       method: "GET",
//       url: "/api/challenges/participate/"+$scope.user.id+".json"
//     }).then(function (response){
//       console.log(response.data);
//       $scope.participatingRecipes = response.data;
//     },function (response){
//       console.log(response);
//     });
//   };

// $scope.createdRecipes = {};
//   var getAllCreatedRecipes = function () {
//     $http({
//       method: "GET",
//       url: "/api/challenges/created/"+$scope.user.id+".json"
//     }).then(function (response){
//       console.log(response.data);
//       $scope.createdRecipes = response.data;
//     },function (response){
//       console.log(response);
//     });
//   };

// getAllParticipatingRecipes();
// getAllCreatedRecipes();
}]);